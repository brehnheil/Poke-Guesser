:root {
  --bg: #0b0f19;
  --panel: rgba(255,255,255,.06);
  --border: rgba(255,255,255,.12);
  --text: #e7e9ee;
  --muted: #b8c2d9;
  --primary: #6ea1ff;
  --danger: #ff6e6e;
  --shadow: 0 10px 30px rgba(0, 0, 0, .35);

  /* Timer config: keep in CSS to avoid magic numbers in JS */
  --timer-duration: 10s; /* matches TIMER_MS in code (10,000ms) */
  --timer-gradient-start: #34d399;
  --timer-gradient-end:   #60a5fa;
}

/* ==== App layout & background ==== */
.game {
  min-height: 100dvh;
  display: grid;
  grid-template-rows: auto 1fr;
  gap: 18px;
  padding: 24px;
  background:
    radial-gradient(1000px 500px at 20% -10%, #1a2246 0%, transparent 60%),
    radial-gradient(900px 500px at 100% 100%, #1a315a 0%, transparent 60%),
    var(--bg);
  color: var(--text);
}

/* Provide breathing room beneath sticky nav */
.home,
.game {
  padding-top: 12px;
}

/* ==== HUD (round + score) ==== */
.hud {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 12px;
  font-size: 1.25rem;
  font-weight: bold;
  gap: 10px;
  flex-wrap: wrap;
}
.pill {
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: 999px;
  padding: 8px 14px;
  box-shadow: var(--shadow);
  color: #cfe0ff;
}
.pill strong { color: #fff; }

/* ==== Stage (sprite + form + reveal areas) ==== */
.stage {
  display: grid;
  place-items: center;
  align-content: start;
  gap: 18px;
}

/* ==== Pokémon image card ==== */
.sprite {
  background: linear-gradient(180deg, rgba(255,255,255,.08), rgba(255,255,255,.03));
  border: 1px solid var(--border);
  border-radius: 22px;
  padding: clamp(16px, 3vw, 28px);
  box-shadow: var(--shadow);
  width: min(480px, 92vw);
  display: grid;
  place-items: center;
}
.sprite img {
  width: min(360px, 84vw); /* visual size basis for timer width below */
  height: auto;
  user-select: none;
  -webkit-user-drag: none;
  transition: filter 300ms ease, transform 250ms ease;
}
.sprite img:hover { transform: translateY(-2px); }

/* Reveal effect */
.silhouette { filter: grayscale(1) brightness(0); }
.revealed { filter: none; }

/* ==== Guess form ==== */
.guess-form {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
  justify-content: center;
}
.input {
  background: #0f1426;
  color: var(--text);
  border: 1px solid var(--border);
  border-radius: 14px;
  padding: .8rem 1rem;
  min-width: min(420px, 80vw);
  font-size: 1rem;
  outline: none;
  transition: border-color .2s ease, box-shadow .2s ease;
}
.input:focus {
  border-color: #3756a5;
  box-shadow: 0 0 0 4px rgba(110,161,255,.18);
}

/* ==== Buttons ==== */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: .5rem;
  padding: .8rem 1rem;
  border: 1px solid var(--border);
  border-radius: 14px;
  background: #141a2b;
  color: var(--text);
  cursor: pointer;
  transition: transform .1s ease, background .2s ease, border-color .2s ease;
}
.btn:hover { transform: translateY(-1px); border-color: #2a355a; }
.btn:active { transform: translateY(0); }
.btn-primary {
  background: linear-gradient(180deg, #8bb6ff, #6ea1ff);
  color: #0d1a3a;
  border-color: transparent;
  box-shadow: 0 6px 18px rgba(110,161,255, .35);
}

/* ==== Reveal & Game Over sections ==== */
.reveal, .gameover {
  text-align: center;
  display: grid;
  gap: 10px;
}
.answer {
  margin: 0;
  font-size: clamp(1.2rem, 2.2vw, 1.6rem);
}
.answer span {
  text-transform: capitalize;
  color: #e7f0ff;
  text-shadow: 0 2px 14px rgba(110,161,255,.35);
}

.reveal-title {
  margin: 8px 0 12px;
}

.reveal-points {
  font-size: 18px;
  margin-bottom: 14px;
  font-weight: 600;
}

.reveal-points.correct { color: #059669; }  /* emerald-600 */
.reveal-points.wrong { color: #b91c1c; }    /* red-700 */

.reveal-answer {
  opacity: 0.8;
  margin-bottom: 16px;
}

/* ==== Loading screen ==== */
.loading {
  min-height: 100dvh;
  display: grid;
  place-items: center;
  color: var(--muted);
  background: var(--bg);
}

/* ==== Sticky Navbar (shared) ==== */
.app-nav {
  position: sticky; /* keeps it visible on scroll */
  top: 0;
  z-index: 50;
  background: rgba(10, 14, 26, 0.8);
  backdrop-filter: blur(8px);
  border-bottom: 1px solid rgba(255,255,255,0.12);
}
.app-nav__inner {
  max-width: 1100px;
  margin: 0 auto;
  padding: 12px 20px;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.app-nav__brand {
  font-weight: 800;
  letter-spacing: .3px;
  color: #cfe0ff;
}
.app-nav__links { display: flex; gap: 10px; }
.app-nav__link {
  padding: .55rem .8rem;
  border-radius: 12px;
  border: 1px solid rgba(255,255,255,0.12);
  background: #141a2b;
  color: #e7e9ee;
  transition: transform .1s ease, border-color .2s ease, background .2s ease;
}
.app-nav__link:hover { transform: translateY(-1px); border-color: #2a355a; }
.app-nav__cta {
  background: linear-gradient(180deg, #8bb6ff, #6ea1ff);
  color: #0d1a3a;
  border-color: transparent;
  box-shadow: 0 6px 18px rgba(110,161,255,.35);
}

/* ==== Timer Bar (CSS-driven, no inline width) ==== */
/* Keyframes: shrink from full to empty over configurable duration */
@keyframes timerShrink {
  from { width: 100%; }
  to   { width: 0%; }
}

/* Container aligns the bar under the sprite and matches the image's max width */
.sprite-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Keep this width aligned to .sprite img (360px max) for a visually coherent bar */
.timer-bar-container {
  width: 100%;
  max-width: 360px;                  /* match .sprite img max width */
  height: 10px;
  margin: 8px auto 20px auto;
  background: #eee;
  border-radius: 6px;
  overflow: hidden;
}

/* The fill animates based on --timer-duration; gradient gives a subtle “progress energy” */
.timer-bar-fill {
  height: 100%;
  background: linear-gradient(90deg, var(--timer-gradient-start), var(--timer-gradient-end));
}

/* Start the countdown when in "guess" phase */
.timer-bar-fill.running {
  animation: timerShrink var(--timer-duration) linear forwards;
}

/* Dim + pause the bar during reveal (freezes at current progress) */
.timer-bar-paused { opacity: 0.5; }
.timer-bar-paused .timer-bar-fill { animation-play-state: paused; }

/* ==== Responsiveness ==== */
@media (max-width: 520px) {
  .hud { gap: 8px; }
  .pill { padding: 6px 12px; }
}
